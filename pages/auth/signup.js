import Head from "next/head";
import React, { useEffect, useState } from "react";
import styles from "@/styles/form.module.css";
import Link from "next/link";
import { useRouter } from "next/router";
const signup = () => {
  const router = useRouter()
  const {
    mainFormSection,
    center_row,
    inputField,
    center_column,
    errorBox_div,
  } = styles;
  const [userData, setUserData] = useState({
    userName: "",
    userEmail: "",
    userPassword: "",
  });
  const [confirmPassword, setConfirmPassword] = useState(null);
  const [erroBox, setErroBox] = useState(false);

  const handleChange = (e) => {
    setUserData({ ...userData, [e.target.name]: e.target.value });
  };
  // =========================== handle submit ==============================
  const handleSubmit = async (e) => {
    e.preventDefault()
    if (confirmPassword != userData.userPassword) setErroBox(true);
    else {
      const response = await fetch("/api/createUsers", {
        method: "POST",
        headers: {
          "Content-type": "application/json; charset=UTF-8",
        },
        body: JSON.stringify(userData),
      })
      if (response.ok) {
        const data = await response.json()

        console.log(data.token);
        localStorage.setItem("token", data.token)
        router.push("/")
        alert("User created")
      }
      else { alert("error") }
      setErroBox(false);
    }
  };
  return (
    <>
      <Head>
        <title>Sign up</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <section className={mainFormSection + " " + center_row}>
        <form method="POST" className={center_column} onSubmit={handleSubmit}>
          <h1>Sign up</h1>
          {/* ======================================= Name field ===========================*/}
          <div className={inputField}>
            <input
              type="text"
              placeholder=" "
              required
              title="Enter Name"
              name="userName"
              value={userData.userName}
              onChange={handleChange}
            />
            <label htmlFor="username">Name</label>
          </div>
          {/* ======================================= Email field ===========================*/}
          <div className={inputField}>
            <label>Email</label>
            <input
              type="email"
              title="Enter Email"
              name="userEmail"
              required
              placeholder=" "
              onChange={handleChange}
            />
          </div>
          {/* ======================================= Password field ===========================*/}
          <div className={inputField}>
            <label>Password</label>
            <input
              type="password"
              placeholder=" "
              required
              name="userPassword"
              title="Enter Password"
              onChange={handleChange}
            />
          </div>
          {/* ======================================= Confirm Password field ===========================*/}
          <div className={inputField}>
            <label>Confirm Password</label>
            <input
              type="password"
              placeholder=" "
              required
              title="Enter Confirm Password"
              onChange={(e) => setConfirmPassword(e.target.value)}
            />
          </div>
          <input type="submit" value="Sign up" />
          <span>
            Already have account? <Link href={"/auth/login"}>Login</Link>
          </span>
        </form>
        {erroBox ? (
          <div className={errorBox_div}>
            <div>
              <i onClick={() => setErroBox(false)}>X</i>
              <h1>Password Not Match</h1>
              <p>Please enter a same password as you can enter above</p>
            </div>
          </div>
        ) : (
          ""
        )}
      </section>
    </>
  );
};

export default signup;
